class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer,Integer>hm=new HashMap<>();
        for(int i=0;i<nums.length;i++)
        {
            hm.put(nums[i],hm.getOrDefault(nums[i],0)+1);
        }
        PriorityQueue<int[]>minHeap=new PriorityQueue<>((a,b)->
        {
            return Integer.compare(a[1],b[1]);
        });
        hm.forEach((key,v)->
        {
            minHeap.add(new int[]{key,v});
            if(minHeap.size()>k)
            minHeap.poll();
        });
        int []arr=new int[k];
        int index=0;
        while(!minHeap.isEmpty())
        {
            arr[index++]=minHeap.poll()[0];

        }
        return arr;
        
    }
}